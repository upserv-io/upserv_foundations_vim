<%# DeleteThis
    common options: 
      label_width - defaults to 20rem (ie 5rem). Must be a tailwind class
      group_width - defaults to nil (which means it will be the full width of the form). Must be a tailwind class
    
    less common options:
      no_label - defaults to false. set to true to remove the label (also you will need to remove the ChangeLabel arg below)
      top_label - defaults to false. set to true to put the label above the input
      label_options - defaults to {}. set to options for the label
      inline_errors - defaults to true. set to false to remove inline errors
      inline_errors_options - defaults to {}. set to options for inline errors
%>
<%= f.input_group 'ChangeLabel' do %>
  <%= f.select(
    :ChangeMethod,
    [],
    # DeleteThis - clean this... maybe see select toggle template?
    # DeleteThis - set up select:
    #   1) if select is optional: use include_blank and remove "required: true" below
    #   2) if select is requried and the user should be prompted to make a selection: use promptabove and add "required: true" below
    #   3) if select is requried with a default selection picked (rather than a prompt): remove prompt and select and remove "required: true" 
    #   see notes below for more details on prompt and include_blank
    #   # DeleteThis - prompt is best when a selection is required and the user needs to be promptedto make a selection. If object.attribute is nil, prompt will add an option to the beginning
    #   of the list with value="". However, if object.attribute has a value, then prompt will not
    #   add an option to the beginning. If object.attribute is nil and then a selection is made,
    #   the prompt will remain. The prompt is only removed if the object is saved and the selectelement is re-rendered (via ajax or re-reloading the page)
    # DeleteThis - include_blank is best when a selection is not requried and can be left blank
    # will add an option to the beginning of the list with value="" regardless of the value of object.attribute
    { prompt: 'Select' include_blank: 'Select' },
    {
      class: 'form-control',
      required: ChangeOrRemove,
      # DeleteThis - add or remove "required: true" based on notes aboveDeleteThis - for more details on required, see note below:
      #required on HTML select elements will error unless the first opion has value="".
      #The rails select helper adjust for this in several ways:
      #  1) if neither include_blank or prompt options are passed, then adding required will also add an
      #  empty option as the first option with a value=  and will make the select required2) if include_blank is added, rails will add the first option with whatever display is selectedand will make the select required3) if prompt is selected and the object has a value of nil for the attribute, then rails will add
      #  a first option with whatever display is selected and will make the select required4) if prompt is selected and the object has a value for the attribute, then rails will ignore the
      #  required attribute (because in this case, there is no blank option and therefore the select is
      #  effectively required. However, it would error if the required attribute was actually includedbecause for html select to have the required attribute, the first option must have a value of nil)
      autofocus: ChangeOrRemove,
      disabled: ChangeOrRemove,
      multiple: ChangeOrRemove,
      readonly: ChangeOrRemove,
    }) do
  %>
    <% ChangeOptionObjects.each do |ChangeOptionObject| %>
      <option value="<%= ChangeOptionObject.ChangeValue %>"<%= " selected=\"true\"".html_safe if ChangeOptionObject.ChangeValue == f.object.ChangeValue %>><%= ChangeOptionObject.ChangeDisplay %></option>
    <% end %>
  <% end %>
<% end %>
